apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "rtc-egress.fullname" . }}-config
  labels:
    {{- include "rtc-egress.labels" . | nindent 4 }}
data:
  egress_config.yaml: |
    # Agora App ID and Token
    app_id: {{ .Values.agora.appId | quote }}
    {{- if .Values.agora.channelName }}
    channel_name: {{ .Values.agora.channelName | quote }}
    {{- else }}
    channel_name: "egress_test"
    {{- end }}
    {{- if .Values.agora.accessToken }}
    access_token: {{ .Values.agora.accessToken | quote }}
    {{- else }}
    access_token: "YOUR_AGORA_CHANNEL_TOKEN"
    {{- end }}
    egress_uid: {{ .Values.agora.egressUid | quote }}

    egress_home: "/tmp/egress"

    # Server configuration
    server:
      health_port: {{ .Values.egress.service.healthPort }}
      api_port: {{ .Values.server.apiPort }}
      {{- if .Values.egress.server.region }}
      region: {{ .Values.egress.server.region | quote }}
      {{- else }}
      region: ""
      {{- end }}
      workers: {{ .Values.egress.server.workers }}
      task_ttl: {{ default 172800 .Values.egress.server.taskTtl }}
      worker_patterns:
        {{- range .Values.egress.server.workerPatterns }}
        - "{{ . }}"
        {{- else }}
        - "egress:snapshot:*"
        - "egress:record:*"
        - "egress:*:snapshot:*"
        - "egress:*:record:*"
        {{- end }}

    # Redis Configuration
    redis:
      {{- if .Values.redis.external.enabled }}
      addr: "{{ .Values.redis.external.host }}:{{ .Values.redis.external.port }}"
      {{- if .Values.redis.external.password }}
      password: {{ .Values.redis.external.password | quote }}
      {{- else }}
      password: ""
      {{- end }}
      db: {{ .Values.redis.external.database }}
      {{- else }}
      addr: "localhost:6379"
      password: ""
      db: 0
      {{- end }}

    {{- if .Values.s3.enabled }}
    # S3 Configuration
    s3:
      bucket: {{ .Values.s3.bucket | quote }}
      region: {{ .Values.s3.region | quote }}
      {{- if .Values.s3.accessKey }}
      access_key: {{ .Values.s3.accessKey | quote }}
      {{- end }}
      {{- if .Values.s3.secretKey }}
      secret_key: {{ .Values.s3.secretKey | quote }}
      {{- end }}
      {{- if .Values.s3.endpoint }}
      endpoint: {{ .Values.s3.endpoint | quote }}
      {{- end }}
    {{- end }}

    # Snapshots settings
    snapshots:
      output_dir: {{ .Values.snapshots.outputDir | quote }}
      width: {{ .Values.snapshots.width }}
      height: {{ .Values.snapshots.height }}
      users: {{ .Values.snapshots.users | quote }}
      layout: {{ .Values.snapshots.layout | quote }}
      interval_in_ms: {{ .Values.snapshots.intervalInMs }}
      quality: {{ .Values.snapshots.quality }}

    # Recording settings
    recording:
      output_dir: {{ .Values.recording.outputDir | quote }}
      users: {{ .Values.recording.users | quote }}
      layout: {{ .Values.recording.layout | quote }}
      format: {{ .Values.recording.format | quote }}
      max_duration_seconds: {{ .Values.recording.maxDurationSeconds }}

      # Video recording settings
      video:
        enabled: {{ .Values.recording.video.enabled }}
        width: {{ .Values.recording.video.width }}
        height: {{ .Values.recording.video.height }}
        fps: {{ .Values.recording.video.fps }}
        bitrate: {{ .Values.recording.video.bitrate }}
        codec: {{ .Values.recording.video.codec | quote }}
        buffer_size: 30

      # Audio recording settings
      audio:
        enabled: {{ .Values.recording.audio.enabled }}
        sample_rate: {{ .Values.recording.audio.sampleRate }}
        channels: {{ .Values.recording.audio.channels }}
        bitrate: {{ .Values.recording.audio.bitrate }}
        codec: {{ .Values.recording.audio.codec | quote }}
        buffer_size: 100

    # Logging configuration
    log:
      level: {{ .Values.server.logLevel | quote }}
      file: "/var/log/rtc_egress/egress.log"
      max_size: 100
      max_backups: 3
      max_age: 28

    # Advanced settings
    advanced:
      video_buffer_size: 10
      audio_buffer_size: 50
      gpu_acceleration: false
      thread_pool_size: 4
      rtc_timeout: 10
      api_timeout: 30
      cleanup_interval: 3600
      max_recording_age: 86400

  uploader_config.yaml: |
    # Health server configuration
    server:
      health_port: {{ .Values.uploader.service.healthPort }}
      {{- if .Values.uploader.server.region }}
      region: {{ .Values.uploader.server.region | quote }}
      {{- else }}
      region: ""
      {{- end }}

    # Directories to watch for uploads
    watcher:
      directories:
        - {{ .Values.persistence.recordings.mountPath | quote }}
        - {{ (.Values.uploader.webRecorder.mountPath | default "/web_recorder") | quote }}
        - {{ .Values.persistence.snapshots.mountPath | quote }}

    # S3 configuration
    s3:
      enabled: {{ .Values.s3.enabled }}
      bucket: {{ .Values.s3.bucket | quote }}
      region: {{ .Values.s3.region | quote }}
      {{- if .Values.s3.accessKey }}
      access_key: {{ .Values.s3.accessKey | quote }}
      {{- end }}
      {{- if .Values.s3.secretKey }}
      secret_key: {{ .Values.s3.secretKey | quote }}
      {{- end }}
      {{- if .Values.s3.endpoint }}
      endpoint: {{ .Values.s3.endpoint | quote }}
      {{- end }}

    log:
      level: {{ .Values.server.logLevel | quote }}

  api_server_config.yaml: |
    # Server configuration
    server:
      port: {{ .Values.apiServer.service.port }}
      health_port: {{ .Values.apiServer.service.healthPort }}
      {{- if .Values.apiServer.server.region }}
      region: {{ .Values.apiServer.server.region | quote }}
      {{- else }}
      region: ""
      {{- end }}
      task_ttl: {{ default 172800 .Values.apiServer.server.taskTtl }}

    # Redis configuration
    redis:
      {{- if .Values.redis.external.enabled }}
      addr: "{{ .Values.redis.external.host }}:{{ .Values.redis.external.port }}"
      {{- if .Values.redis.external.password }}
      password: {{ .Values.redis.external.password | quote }}
      {{- else }}
      password: ""
      {{- end }}
      db: {{ .Values.redis.external.database }}
      {{- else }}
      addr: "localhost:6379"
      password: ""
      db: 0
      {{- end }}

    # Logging configuration
    log:
      level: {{ .Values.server.logLevel | quote }}

  flexible_recorder_config.yaml: |
    # Server configuration
    server:
      health_port: {{ .Values.flexibleRecorder.service.healthPort }}
      {{- if .Values.flexibleRecorder.server.region }}
      region: {{ .Values.flexibleRecorder.server.region | quote }}
      {{- else }}
      region: ""
      {{- end }}
      workers: {{ .Values.flexibleRecorder.server.workers }}
      task_ttl: {{ default 172800 .Values.flexibleRecorder.server.taskTtl }}
      worker_patterns:
        {{- range .Values.flexibleRecorder.server.workerPatterns }}
        - "{{ . }}"
        {{- else }}
        - "egress:*:web:*"  # Regional web recording tasks
        - "egress:web:*"    # Global web recording tasks
        {{- end }}

    # Redis configuration
    redis:
      {{- if .Values.redis.external.enabled }}
      addr: "{{ .Values.redis.external.host }}:{{ .Values.redis.external.port }}"
      {{- if .Values.redis.external.password }}
      password: {{ .Values.redis.external.password | quote }}
      {{- else }}
      password: ""
      {{- end }}
      db: {{ .Values.redis.external.database }}
      {{- else }}
      addr: "localhost:6379"
      password: ""
      db: 0
      {{- end }}

    # Web recorder configuration
    web_recorder:
      base_url: {{ .Values.flexibleRecorder.webRecorder.baseUrl | quote }}
      timeout: {{ .Values.flexibleRecorder.webRecorder.timeout }}

    # Logging configuration
    log:
      level: {{ .Values.server.logLevel | quote }}

  webhook_notifier_config.yaml: |
    # Server configuration
    server:
      health_port: {{ .Values.webhookNotifier.service.healthPort }}
      {{- if .Values.webhookNotifier.server.region }}
      region: {{ .Values.webhookNotifier.server.region | quote }}
      {{- else }}
      region: ""
      {{- end }}

    # Redis configuration
    redis:
      {{- if .Values.redis.external.enabled }}
      addr: "{{ .Values.redis.external.host }}:{{ .Values.redis.external.port }}"
      {{- if .Values.redis.external.password }}
      password: {{ .Values.redis.external.password | quote }}
      {{- else }}
      password: ""
      {{- end }}
      db: {{ .Values.redis.external.database }}
      {{- else }}
      addr: "localhost:6379"
      password: ""
      db: 0
      {{- end }}

    # Webhook configuration
    webhook:
      url: {{ .Values.webhookNotifier.webhook.url | quote }}
      timeout: {{ .Values.webhookNotifier.webhook.timeout | default 30 }}
      max_retries: {{ .Values.webhookNotifier.webhook.maxRetries | default 5 }}
      base_retry_interval: {{ .Values.webhookNotifier.webhook.baseRetryInterval | default 15 }}
      max_retry_interval: {{ .Values.webhookNotifier.webhook.maxRetryInterval | default 300 }}
      auth_token: {{ .Values.webhookNotifier.webhook.authToken | quote }}
      notify_states:
        {{- $states := .Values.webhookNotifier.webhook.notifyStates | default (list "PROCESSING" "STOPPED" "FAILED" "TIMEOUT") }}
        {{- range $states }}
        - "{{ . }}"
        {{- end }}
      delivered_ttl: {{ .Values.webhookNotifier.webhook.deliveredTtl | default 172800 }}
